{"version":3,"sources":["components/Card/index.js","datas/movies.js","contexts/Movies/index.js","components/Pagination/index.js","components/CardList/index.js","components/Filter/index.js","App.js","reportWebVitals.js","index.js"],"names":["Card","data","deleteMovie","useState","displayRating","setDisplayRating","className","title","Chip","label","category","Button","onClick","likes","dislikes","variant","color","startIcon","movies","id","movies$","Promise","resolve","reject","setTimeout","MovieContext","createContext","MovieContextProvider","props","refMovies","setRefMovies","setMovies","categories","setCategories","currentPage","setCurrentPage","moviePerPage","setMoviePerPage","maxPage","setMaxPage","useEffect","initRefMovies","resetMovie","getCategories","countingMoviePerPage","a","tmpMovie","tmpMovies","tmpCategories","map","movie","push","Set","uniqueCatergories","filterMovies","filteredMovies","filter","deleteInFilter","categoryToDelete","length","tmpNewCat","movieToDelete","newMovies","toast","success","console","log","Provider","value","previousPage","nextPage","children","useStyles","makeStyles","theme","button","display","marginTop","spacing","formControl","margin","minWidth","Pagination","totalMovies","classes","useContext","React","open","setOpen","FormControl","InputLabel","Select","labelId","onClose","onOpen","onChange","event","target","MenuItem","CardList","indexOfLastMovie","indexOfFirstMovie","currentMovies","slice","currentMovie","paginate","pageNumber","Filter","setCatergory","App","position","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29420e95.chunk.js","sourcesContent":["import React, {useState}from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst Card = ({data, deleteMovie}) => {\r\n    const [displayRating, setDisplayRating] = useState(false);\r\n    const toogleDisplayRating = () => {\r\n        setDisplayRating(!displayRating);\r\n    }\r\n    return(\r\n        <div className=\"card\">\r\n            <p className=\"title\">{data.title}</p>\r\n            <Chip label={data.category} />\r\n            <div >\r\n                <Button onClick={() => {toogleDisplayRating()}}>Show Ratings</Button>\r\n                {\r\n                    displayRating ? \r\n                    <div className=\"rating\">\r\n                        <div className=\"likes\">\r\n                            <ThumbUpIcon />\r\n                            <div>{data.likes}</div>\r\n                        </div>\r\n                        <div className=\"dislikes\">\r\n                            <ThumbDownIcon />\r\n                            <div>{data.dislikes}</div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div></div>\r\n                }\r\n            </div>\r\n            <div className=\"actions\">\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick={() => {deleteMovie(data)}}\r\n                >\r\n                    Delete\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","const movies = [\r\n    {\r\n      id: '1',\r\n      title: 'Oceans 8',\r\n      category: 'Comedy',\r\n      likes: 4,\r\n      dislikes: 1\r\n    }, {\r\n      id: '2',\r\n      title: 'Midnight Sun',\r\n      category: 'Comedy',\r\n      likes: 2,\r\n      dislikes: 0\r\n    }, {\r\n      id: '3',\r\n      title: 'Les indestructibles 2',\r\n      category: 'Animation',\r\n      likes: 3,\r\n      dislikes: 1\r\n    }, {\r\n      id: '4',\r\n      title: 'Sans un bruit',\r\n      category: 'Thriller',\r\n      likes: 6,\r\n      dislikes: 6\r\n    }, {\r\n      id: '5',\r\n      title: 'Creed II',\r\n      category: 'Drame',\r\n      likes: 16,\r\n      dislikes: 2\r\n    }, {\r\n      id: '6',\r\n      title: 'Pulp Fiction',\r\n      category: 'Thriller',\r\n      likes: 11,\r\n      dislikes: 3\r\n    }, {\r\n      id: '7',\r\n      title: 'Pulp Fiction',\r\n      category: 'Thriller',\r\n      likes: 12333,\r\n      dislikes: 32\r\n    }, {\r\n      id: '8',\r\n      title: 'Seven',\r\n      category: 'Thriller',\r\n      likes: 2,\r\n      dislikes: 1\r\n    }, {\r\n      id: '9',\r\n      title: 'Inception',\r\n      category: 'Thriller',\r\n      likes: 2,\r\n      dislikes: 1\r\n    }, {\r\n      id: '10',\r\n      title: 'Gone Girl',\r\n      category: 'Thriller',\r\n      likes: 22,\r\n      dislikes: 12\r\n    },\r\n  ]\r\n  \r\n  export const movies$ = new Promise((resolve, reject) => setTimeout(resolve, 100, movies))  ","import React, {createContext, useState, useEffect} from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { movies$ } from '../../datas/movies';\r\n\r\nexport const MovieContext = createContext();\r\n\r\nconst MovieContextProvider = (props) => {\r\n    const [refMovies, setRefMovies] = useState([]);\r\n    const [movies, setMovies] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [moviePerPage, setMoviePerPage] = useState(10);\r\n    // out of lazyness\r\n    const [maxPage, setMaxPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        initRefMovies();\r\n        resetMovie();\r\n        getCategories();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        countingMoviePerPage();\r\n    }, [moviePerPage])\r\n\r\n    const initRefMovies = async() => {\r\n        const tmpMovie = await movies$;\r\n        await setRefMovies(tmpMovie);\r\n    }\r\n\r\n    const resetMovie = async () => {\r\n        const tmpMovie = await movies$;\r\n        await setMovies(tmpMovie);\r\n    }\r\n\r\n    const getCategories = async () => {\r\n        const tmpMovies = await movies$;\r\n        let tmpCategories = [];\r\n        await tmpMovies.map((movie) => tmpCategories.push(movie.category));\r\n        const uniqueCatergories = await [...new Set(tmpCategories)];\r\n        setCategories(uniqueCatergories);\r\n    }\r\n\r\n    const filterMovies = async (category) => {\r\n        if (category === \"All\")\r\n            await setMovies(refMovies);\r\n        else{\r\n            const tmpMovies = await refMovies;\r\n            const filteredMovies = tmpMovies.filter((movie) => movie.category === category)\r\n            await setMovies(filteredMovies);\r\n        }\r\n    }\r\n\r\n    const deleteInFilter = async (categoryToDelete) => {\r\n        let numberOfCatergory = movies.filter(movie => movie.category === categoryToDelete).length;\r\n        if(numberOfCatergory <= 1){\r\n            let tmpNewCat = categories.filter(category => category !== categoryToDelete);\r\n            setCategories(tmpNewCat);\r\n        }\r\n    }\r\n\r\n    const deleteMovie = async (movieToDelete) => {\r\n        \r\n            const newMovies = await refMovies.filter(movie => movie.id !== movieToDelete.id);\r\n            await setMovies(newMovies);\r\n            await setRefMovies(newMovies);\r\n            await deleteInFilter(movieToDelete.category);\r\n            toast.success(`${movieToDelete.title} has been deleted`);\r\n    }\r\n\r\n\r\n    const countingMoviePerPage = () => {\r\n        console.log(\"movie per page has change\");\r\n    }\r\n\r\n    const previousPage = () => {\r\n        if( currentPage > 1 )\r\n            setCurrentPage(currentPage - 1);\r\n        console.log(currentPage);\r\n    }\r\n\r\n    const nextPage = () => {\r\n        console.log(currentPage);\r\n        console.log(maxPage);\r\n        if(currentPage <= maxPage)\r\n            setCurrentPage(currentPage + 1);\r\n    }\r\n    \r\n    return(\r\n        <MovieContext.Provider\r\n            value={{\r\n                /// I'm exposing way to much data , I know :)\r\n                // Pagination\r\n                setMaxPage : setMaxPage,\r\n                setCurrentPage : setCurrentPage,\r\n                currentPage : currentPage,\r\n                moviePerPage : moviePerPage,\r\n                setMoviePerPage : setMoviePerPage,\r\n                previousPage : previousPage,\r\n                nextPage : nextPage,\r\n                // Filter\r\n                categories : categories,\r\n                getCategories : getCategories,\r\n                // Movies\r\n                movies : movies,\r\n                filterMovies : filterMovies,\r\n                deleteMovie : deleteMovie, \r\n                resetMovie : resetMovie\r\n            }}\r\n        >\r\n            {props.children}\r\n        </MovieContext.Provider>\r\n    )\r\n}\r\n\r\nexport default MovieContextProvider;","import React, {useContext} from 'react';\r\nimport { MovieContext } from '../../contexts/Movies';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 220,\r\n  },\r\n}));\r\n\r\nconst Pagination = ({totalMovies}) => {\r\n  const classes = useStyles();\r\n  const {moviePerPage , setMoviePerPage, previousPage, nextPage} =  useContext(MovieContext)\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setMoviePerPage(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-controlled-open-select-label\">Movies Per Page</InputLabel>\r\n        <Select\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={moviePerPage}\r\n          onChange={handleChange}\r\n        >\r\n          { /* yeah i know i'm cheating , it's just bc i have other project to work on this week end :) lol 100 */}\r\n          <MenuItem value={100}>\r\n            <em>show all</em>\r\n          </MenuItem>\r\n          <MenuItem value={4}>4</MenuItem>\r\n          <MenuItem value={8}>8</MenuItem>\r\n          <MenuItem value={12}>12</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <div>\r\n        <Button \r\n          className=\"button-pagination\" \r\n          variant=\"contained\" \r\n           onClick={() => previousPage()}\r\n        >\r\n          Previous\r\n        </Button>\r\n        <Button \r\n          className=\"button-pagination\" \r\n          variant=\"contained\" \r\n           onClick={() => nextPage()}\r\n        >\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, { useContext } from 'react';\r\nimport Card from '../Card';\r\nimport Pagination from '../Pagination';\r\nimport { MovieContext } from '../../contexts/Movies';\r\n\r\nconst CardList = () => {\r\n    const {movies, deleteMovie, moviePerPage, setCurrentPage, currentPage, setMaxPage} = useContext(MovieContext);\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    \r\n    const indexOfLastMovie = currentPage * moviePerPage;\r\n    const indexOfFirstMovie = indexOfLastMovie - moviePerPage;\r\n    const currentMovies = movies.slice(indexOfFirstMovie, indexOfLastMovie);\r\n    setMaxPage(currentMovies.length);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"card-area\">\r\n                {\r\n                    // movies.map((movie) => \r\n                    //     <Card \r\n                    //         key={movie.id} \r\n                    //         data={movie} \r\n                    //         deleteMovie={deleteMovie}\r\n                    //     />\r\n                    // )\r\n                    currentMovies.map((currentMovie) => \r\n                        <Card \r\n                            key={currentMovie.id} \r\n                            data={currentMovie} \r\n                            deleteMovie={deleteMovie}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"filter-area\">\r\n                <Pagination \r\n                    moviePerPage={moviePerPage} \r\n                    totalMovies={currentMovies.length}\r\n                    paginate={paginate}\r\n                />\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React, {useState, useEffect, useContext} from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { MovieContext } from '../../contexts/Movies';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 200,\r\n    },\r\n}));\r\n\r\nconst Filter = () => {\r\n    const classes = useStyles();\r\n    const {categories, filterMovies} = useContext(MovieContext)\r\n    const [category, setCatergory] = useState(\"\");\r\n    const [open, setOpen] = React.useState(false);\r\n    \r\n    useEffect(() => {\r\n        \r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setCatergory(event.target.value);\r\n        filterMovies(event.target.value);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n      const handleOpen = () => {\r\n        setOpen(true);\r\n      };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-controlled-open-select-label\">Catergories</InputLabel>\r\n            <Select\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                onOpen={handleOpen}\r\n                value={category}\r\n                onChange={handleChange}\r\n            >\r\n                <MenuItem value=\"All\">\r\n                <em>All</em>\r\n                </MenuItem>\r\n                {categories.map((category) => <MenuItem key={category} value={category}>{category}</MenuItem>)}\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default Filter;","import CardList from './components/CardList';\nimport { ToastContainer } from 'react-toastify';\nimport MovieContextProvider from './contexts/Movies';\nimport './styles/main.scss';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Filter from './components/Filter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <section id=\"layout\">\n        <MovieContextProvider>\n          <div className=\"filter-area\">\n            <Filter />\n          </div>\n          <CardList/>\n          <ToastContainer position=\"bottom-center\" />\n        </MovieContextProvider>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}